//
//  OllamaKit+Generate.swift
//
//
//  Created by Kevin Hermawan on 02/01/24.
//

import Foundation

extension OllamaKit {
    /// Establishes an asynchronous stream for responses from the Ollama API, based on the provided data.
    ///
    /// This method sets up a streaming connection using Swift's concurrency features, allowing for real-time data handling as the responses are generated by the Ollama API.
    ///
    /// ```swift
    /// let ollamaKit = OllamaKit()
    /// let requestData = OKGenerateRequestData(/* parameters */)
    ///
    /// Task {
    ///     do {
    ///         for try await response in ollamaKit.generate(data: requestData) {
    ///             // Handle each generated response
    ///         }
    ///     } catch {
    ///         // Handle error
    ///     }
    /// }
    /// ```
    ///
    /// - Parameter data: The ``OKGenerateRequestData`` used to initiate the streaming from the Ollama API.
    /// - Returns: An `AsyncThrowingStream<OKGenerateResponse, Error>` emitting the live stream of responses from the Ollama API.
    public func generate(data: OKGenerateRequestData) -> AsyncThrowingStream<OKGenerateResponse, Error> {
        do {
            let request = try OKRouter.generate(data: data).asURLRequest(with: baseURL)
            
            return OKHTTPClient.shared.stream(request: request, with: OKGenerateResponse.self)
        } catch {
            return AsyncThrowingStream { continuation in
                continuation.finish(throwing: error)
            }
        }
    }
}
